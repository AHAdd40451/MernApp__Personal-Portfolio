{"version":3,"file":"static/js/390.53dcefe2.chunk.js","mappings":"wLAAaA,EAAQ,CACjBC,QAAS,2BCDAC,EAAiB,SAACC,EAAWC,EAAWC,GACjD,IAAKF,EACD,KAAM,gFAEV,IAAKC,EACD,KAAM,wEAEV,IAAKC,EACD,KAAM,mFAEV,OAAO,CACX,E,oBCXaC,GAAqB,QAC9B,WAAYC,IAAc,eACtBC,KAAKC,OAASF,EAAaE,OAC3BD,KAAKE,KAAOH,EAAaI,YAC7B,ICFSC,EAAW,SAACC,EAAKC,GAAuB,IAAjBC,EAAU,UAAH,6CAAG,CAAC,EAC3C,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAM,IAAIC,eAChBD,EAAIE,iBAAiB,QAAQ,YAAgB,IAAbC,EAAM,EAANA,OACtBC,EAAiB,IAAIjB,EAAsBgB,GACnB,MAA1BC,EAAed,QAA0C,OAAxBc,EAAeb,KAChDO,EAAQM,GAGRL,EAAOK,EAEf,IACAJ,EAAIE,iBAAiB,SAAS,YAAgB,IAAbC,EAAM,EAANA,OAC7BJ,EAAO,IAAIZ,EAAsBgB,GACrC,IACAH,EAAIK,KAAK,OAAQxB,EAAMC,QAAUY,GAAK,GACtCY,OAAOC,KAAKX,GAASY,SAAQ,SAACC,GAC1BT,EAAIU,iBAAiBD,EAAKb,EAAQa,GACtC,IACAT,EAAIW,KAAKhB,EACb,GACJ,ECnBA,ECoBwB,SAACV,EAAWC,EAAY0B,EAAM5B,GAClD,IAAM6B,EAAM7B,GAAaH,EAAMiC,QACzBC,EAvBW,SAACH,GAClB,IAAIG,EAOJ,KALIA,EADgB,kBAATH,EACOI,SAASC,cAAcL,GAGvBA,IAE2B,SAAzBG,EAAYG,SAC5B,KAAM,0FAEV,OAAOH,CACX,CAWwBI,CAAaP,GACjC7B,EAAe8B,EAAK5B,EAAWC,GAC/B,IAAMkC,EAAW,IAAIC,SAASN,GAK9B,OAJAK,EAASE,OAAO,cAAe,SAC/BF,EAASE,OAAO,aAAcrC,GAC9BmC,EAASE,OAAO,cAAepC,GAC/BkC,EAASE,OAAO,UAAWT,GACpBpB,EAAS,4BAA6B2B,EACjD,E,mBC3BA,2BAEA,IA8GA,EA9GgB,WACd,IAAMR,GAAOW,EAAAA,EAAAA,UAyBb,OACE,SAACC,EAAA,MAAU,CACTC,YAAa,CAAEC,EAAG,EAAE,IAAK,GAAIC,QAAS,CAAC,EAAG,IAC1CC,WAAY,CAAEC,SAAU,IAAM,UAE9B,qBAASC,GAAG,UAAS,WACnB,0CACA,wCAEA,iBAAKC,UAAU,+BAA8B,WAC3C,iBAAKA,UAAU,mBAAkB,WAC/B,qBAASA,UAAU,kBAAiB,WAClC,SAAC,MAAU,CAACA,UAAU,0BACtB,sCACA,0BACG,KACD,cAAGC,KAAK,iKAAgK,6BAK1K,cACEA,KAAK,kDACL7B,OAAO,SACP8B,IAAI,aAAY,gCAKpB,qBAASF,UAAU,kBAAiB,WAClC,SAAC,MAAc,CAACA,UAAU,0BAC1B,mCACA,qDACA,cACEC,KAAK,iCACL7B,OAAO,SACP8B,IAAI,aAAY,gCAKpB,qBAASF,UAAU,kBAAiB,WAClC,SAAC,MAAe,CAACA,UAAU,0BAC3B,uCACA,wCACA,cACEC,KAAK,8CACL7B,OAAO,SACP8B,IAAI,aAAY,mCAMtB,kBAAMC,IAAKtB,EAAMuB,SA7EP,SAACC,GACjBA,EAAEC,iBAEFC,EAEI,kBACA,mBACA1B,EAAK2B,QACL,qBAEDC,MACC,SAAUC,GACRC,QAAQC,IAAI,WAAYF,EAASnD,OAAQmD,EAASlD,MAClDqD,MAAM,qDACR,IACA,SAAUC,GACRH,QAAQC,IAAI,YAAaE,GACzBD,MAAM,UACR,IAEJR,EAAEjC,OAAO2C,OACX,EAwD6C,WACnC,kBACEC,KAAK,OACLC,KAAK,OACLC,YAAY,iBACZC,UAAQ,KAEV,kBACEH,KAAK,QACLC,KAAK,QACLC,YAAY,aACZC,UAAQ,KAEV,qBACEF,KAAK,UACLlB,GAAG,GACHqB,KAAK,IACLF,YAAY,eACZC,UAAQ,KAEV,mBAAQH,KAAK,SAAShB,UAAU,kBAAiB,oCAQ7D,C","sources":["../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","components/Contact/Contact.jsx"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.7.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React, { useRef } from \"react\";\nimport { MdOutlineEmail } from \"react-icons/md\";\nimport { RiMessengerLine } from \"react-icons/ri\";\nimport { BsWhatsapp } from \"react-icons/bs\";\nimport emailjs from \"@emailjs/browser\";\nimport { motion } from \"framer-motion\";\n\nimport(\"./Contact.css\");\n\nconst Contact = () => {\n  const form = useRef();\n\n  const sendEmail = (e) => {\n    e.preventDefault();\n\n    emailjs\n      .sendForm(\n        \"service_cep1stp\",\n        \"template_3js2yuu\",\n        form.current,\n        \"hRumW46UfwWKjwG4u\"\n      )\n      .then(\n        function (response) {\n          console.log(\"SUCCESS!\", response.status, response.text);\n          alert(\"Thankyou ! Your message has been send successfully\");\n        },\n        function (error) {\n          console.log(\"FAILED...\", error);\n          alert(\"Failed \");\n        }\n      );\n    e.target.reset();\n  };\n\n  return (\n    <motion.div\n      whileInView={{ x: [-100, 0], opacity: [0, 1] }}\n      transition={{ duration: 0.5 }}\n    >\n      <section id=\"contact\">\n        <h5>Get in touch</h5>\n        <h2>Contact Me</h2>\n\n        <div className=\"container contact__container\">\n          <div className=\"contact__options\">\n            <article className=\"contact__option\">\n              <BsWhatsapp className=\"contact__option-icon\" />\n              <h4>WhatsApp</h4>\n              <h5>\n                {\" \"}\n                <a href=\"https://www.google.com/url?q=https://wa.me/message/QYPEEWLZOUERL1&sa=D&source=apps-viewer-frontend&ust=1670693978861668&usg=AOvVaw3lM3UwsynlPdkDxawcZl83&hl=en\">\n                  03192321949\n                </a>\n              </h5>\n\n              <a\n                href=\"https://api.whatsapp.com/send?phone=03168990880\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Send a message\n              </a>\n            </article>\n            <article className=\"contact__option\">\n              <MdOutlineEmail className=\"contact__option-icon\" />\n              <h4>Email</h4>\n              <h5>ahadkhan40451@gmail.com</h5>\n              <a\n                href=\"mailto:ahadkhan40451@gmail.com\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Send a message\n              </a>\n            </article>\n            <article className=\"contact__option\">\n              <RiMessengerLine className=\"contact__option-icon\" />\n              <h4>Messenger</h4>\n              <h5>Abdul Ahad</h5>\n              <a\n                href=\"https://www.messenger.com/t/100022152171495\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n              >\n                Send a message\n              </a>\n            </article>\n          </div>\n          <form ref={form} onSubmit={sendEmail}>\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Your Full Name\"\n              required\n            />\n            <input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Your Email\"\n              required\n            />\n            <textarea\n              name=\"message\"\n              id=\"\"\n              rows=\"7\"\n              placeholder=\"Your message\"\n              required\n            ></textarea>\n            <button type=\"submit\" className=\"btn btn-primary\">\n              Send Message\n            </button>\n          </form>\n        </div>\n      </section>\n    </motion.div>\n  );\n};\n\nexport default Contact;\n"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","useRef","motion","whileInView","x","opacity","transition","duration","id","className","href","rel","ref","onSubmit","e","preventDefault","emailjs","current","then","response","console","log","alert","error","reset","type","name","placeholder","required","rows"],"sourceRoot":""}